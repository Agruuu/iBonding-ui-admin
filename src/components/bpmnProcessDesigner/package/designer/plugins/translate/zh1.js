/**
 * This is a sample file that should be replaced with the actual translation.
 *
 * Checkout https://github.com/bpmn-io/bpmn-js-i18n for a list of available
 * translations and labels to translate.
 */
export default {
  // Add section
  'Append EndEvent': 'Add End Event',
  'Append Gateway': 'Add gateway',
  'Append Task': 'Additional tasks',
  'Append Intermediate/Boundary Event': 'Add intermediate throwing event/Boundary events',

  'Activate the global connect tool': 'Activate Global Connection Tool',
  'Append {type}': 'add to {type}',
  'Add Lane above': 'Add a note above',
  'Divide into two Lanes': 'Split into two lanes',
  'Divide into three Lanes': 'Split into three lanes',
  'Add Lane below': 'Add a note below',
  'Append compensation activity': 'Additional compensation activities',
  'Change type': 'Change type',
  'Connect using Association': 'Use associated connections',
  'Connect using Sequence/MessageFlow or Association': 'Order of use/Message flow or associated connection',
  'Connect using DataInputAssociation': 'Use data input to associate connections',
  Remove: 'remove',
  'Activate the hand tool': 'Activate the gripper tool',
  'Activate the lasso tool': 'Activate Lasso Tool',
  'Activate the create/remove space tool': 'Activate Create/Delete Space Tool',
  'Create expanded SubProcess': 'Create extension subprocess',
  'Create IntermediateThrowEvent/BoundaryEvent': 'Create intermediate throw event/Boundary events',
  'Create Pool/Participant': 'Create Pool/participant',
  'Parallel Multi Instance': 'Parallel multiple events',
  'Sequential Multi Instance': 'Multiple temporal events',
  DataObjectReference: 'Data Object Reference',
  DataStoreReference: 'Data storage reference',
  Loop: 'loop',
  'Ad-hoc': 'On the spot',
  'Create {type}': 'establish {type}',
  Task: 'task',
  'Send Task': 'Send Task',
  'Receive Task': 'Receive tasks',
  'User Task': 'User tasks',
  'Manual Task': 'Manual tasks',
  'Business Rule Task': 'Business Rule Task',
  'Service Task': 'Service Task',
  'Script Task': 'Script task',
  'Call Activity': 'Call Activity',
  'Sub Process (collapsed)': 'Sub process（Foldable）',
  'Sub Process (expanded)': 'Sub process（Expanded）',
  'Start Event': 'Start event',
  StartEvent: 'Start event',
  'Intermediate Throw Event': 'Intermediate events',
  'End Event': 'end event',
  EndEvent: 'end event',
  'Create StartEvent': 'Create Start Event',
  'Create EndEvent': 'Create End Event',
  'Create Task': 'Create Task',
  'Create User Task': 'Create User Task',
  'Create Call Activity': 'Create call activity',
  'Create Service Task': 'Create service task',
  'Create Gateway': 'Create Gateway',
  'Create DataObjectReference': 'Create data object',
  'Create DataStoreReference': 'Create data storage',
  'Create Group': 'Create a group',
  'Create Intermediate/Boundary Event': 'Create intermediate/Boundary events',
  'Message Start Event': 'Message Start Event',
  'Timer Start Event': 'Scheduled start event',
  'Conditional Start Event': 'Conditional start event',
  'Signal Start Event': 'Signal start event',
  'Error Start Event': 'Error Start Event',
  'Escalation Start Event': 'Upgrade Start Event',
  'Compensation Start Event': 'Compensation Start Event',
  'Message Start Event (non-interrupting)': 'Message Start Event（Non Interrupted）',
  'Timer Start Event (non-interrupting)': 'Scheduled start event（Non Interrupted）',
  'Conditional Start Event (non-interrupting)': 'Conditional start event（Non Interrupted）',
  'Signal Start Event (non-interrupting)': 'Signal start event（Non Interrupted）',
  'Escalation Start Event (non-interrupting)': 'Upgrade Start Event（Non Interrupted）',
  'Message Intermediate Catch Event': 'Capture events in the middle of messages',
  'Message Intermediate Throw Event': 'Throwing an event in the middle of a message',
  'Timer Intermediate Catch Event': 'Capture events during scheduled intervals',
  'Escalation Intermediate Throw Event': 'Event thrown during upgrade',
  'Conditional Intermediate Catch Event': 'Capture events in the middle of conditions',
  'Link Intermediate Catch Event': 'Capture events in the middle of the link',
  'Link Intermediate Throw Event': 'Throwing events in the middle of the link',
  'Compensation Intermediate Throw Event': 'Compensation for throwing events in the middle',
  'Signal Intermediate Catch Event': 'Capture event in the middle of the signal',
  'Signal Intermediate Throw Event': 'Event thrown in the middle of the signal',
  'Message End Event': 'Message End Event',
  'Escalation End Event': 'Scheduled End Event',
  'Error End Event': 'Error termination event',
  'Cancel End Event': 'Cancel End Event',
  'Compensation End Event': 'Compensation termination event',
  'Signal End Event': 'Signal End Event',
  'Terminate End Event': 'Terminate End Event',
  'Message Boundary Event': 'Message boundary event',
  'Message Boundary Event (non-interrupting)': 'Message boundary event（Non Interrupted）',
  'Timer Boundary Event': 'Timer boundary event',
  'Timer Boundary Event (non-interrupting)': 'Timer boundary event（Non Interrupted）',
  'Escalation Boundary Event': 'Upgrade boundary event',
  'Escalation Boundary Event (non-interrupting)': 'Upgrade boundary event（Non Interrupted）',
  'Conditional Boundary Event': 'Conditional boundary event',
  'Conditional Boundary Event (non-interrupting)': 'Conditional boundary event（Non Interrupted）',
  'Error Boundary Event': 'Error boundary event',
  'Cancel Boundary Event': 'Cancel boundary events',
  'Signal Boundary Event': 'Signal boundary event',
  'Signal Boundary Event (non-interrupting)': 'Signal boundary event（Non Interrupted）',
  'Compensation Boundary Event': 'Compensation boundary event',
  'Exclusive Gateway': 'Exclusive Gateway ',
  'Parallel Gateway': 'Parallel Gateway ',
  'Inclusive Gateway': 'Inclusive gateway',
  'Complex Gateway': 'Complex Gateway ',
  'Event based Gateway': 'Event-based Gateway ',
  Transaction: 'transport',
  'Sub Process': 'Sub process',
  'Event Sub Process': 'Event sub process',
  'Collapsed Pool': 'Collapsed Pool',
  'Expanded Pool': 'Expand Pool',

  // Errors
  'no parent for {element} in {parent}': 'stay {parent} in，{element} No parent class',
  'no shape type specified': 'No specified shape type',
  'flow elements must be children of pools/participants': 'The flow element must be a pool/Subclass of Participants',
  'out of bounds release': 'out of bounds release',
  'more than {count} child lanes': 'Child object is greater than {count} ',
  'element required': 'Element cannot be empty',
  'diagram not part of bpmn:Definitions': 'The flowchart does not comply bpmn standard',
  'no diagram to display': 'There is no flowchart to display',
  'no process or collaboration to display': 'There is no process to showcase/cooperation',
  'element {element} referenced by {referenced}#{property} not yet drawn':
    'from {referenced}#{property} quoted from {element} the element has not been drawn yet',
  'already rendered {element}': '{element} already rendered',
  'failed to import {element}': 'Import {element} fail',
  //Parameters of the Property Panel
  Id: 'ID',
  Name: 'name',
  General: 'general',
  Details: 'details',
  'Message Name': 'Message Name',
  Message: 'message',
  Initiator: 'creator',
  'Asynchronous Continuations': 'Continuous asynchronous',
  'Asynchronous Before': 'Before Asynchronous',
  'Asynchronous After': 'After asynchrony',
  'Job Configuration': 'Work configuration',
  Exclusive: 'exclude',
  'Job Priority': 'Work priority',
  'Retry Time Cycle': 'Retry time period',
  Documentation: 'file',
  'Element Documentation': 'Element document',
  'History Configuration': 'Historical configuration',
  'History Time To Live': 'The survival time of history',
  Forms: 'form ',
  'Form Key': 'form key',
  'Form Fields': 'form field ',
  'Business Key': 'business key',
  'Form Field': 'form field ',
  ID: 'ID',
  Type: 'type',
  Label: 'name',
  'Default Value': 'Default value',
  'Default Flow': 'Default flow path',
  'Conditional Flow': 'Conditional flow path',
  'Sequence Flow': 'Sequence Flow path',
  Validation: 'validation',
  'Add Constraint': 'Add constraints',
  Config: 'config',
  Properties: 'properties',
  'Add Property': 'add property',
  Value: 'value',
  Listeners: 'monitor',
  'Execution Listener': 'Execute monitoring',
  'Event Type': 'Event type',
  'Listener Type': 'Type of listener',
  'Java Class': 'Javaclass',
  Expression: 'expression',
  'Must provide a value': 'A value must be provided',
  'Delegate Expression': 'Proxy expression',
  Script: 'script',
  'Script Format': 'Script format',
  'Script Type': 'Script type',
  'Inline Script': 'inline script ',
  'External Script': 'External script',
  Resource: 'resources',
  'Field Injection': 'Field injection',
  Extensions: 'extend',
  'Input/Output': 'input/output',
  'Input Parameters': 'input parameter ',
  'Output Parameters': 'Output parameters',
  Parameters: 'parameter',
  'Output Parameter': 'Output parameters',
  'Timer Definition Type': 'Timer Definition Type',
  'Timer Definition': 'Timer Definition',
  Date: 'date',
  Duration: 'continued',
  Cycle: 'loop',
  Signal: 'signal',
  'Signal Name': 'signal name',
  Escalation: 'upgrade',
  Error: 'error',
  'Link Name': 'Link Name',
  Condition: 'Condition Name',
  'Variable Name': 'Variable Name',
  'Variable Event': 'Variable events',
  'Specify more than one variable change event as a comma separated list.':
    'Multiple variable events separated by commas',
  'Wait for Completion': 'Waiting for completion',
  'Activity Ref': 'Event reference',
  'Version Tag': 'Version label',
  Executable: 'Executable file',
  'External Task Configuration': 'Expand task configuration',
  'Task Priority': 'Task priority',
  External: 'external',
  Connector: 'Connector',
  'Must configure Connector': 'Connectors must be configured',
  'Connector Id': 'Connector number',
  Implementation: 'Implementation method',
  'Field Injections': 'Field injection',
  Fields: 'field',
  'Result Variable': 'Result variable',
  Topic: 'theme',
  'Configure Connector': 'Configure connectors',
  'Input Parameter': 'input parameter ',
  Assignee: 'agent',
  'Candidate Users': 'Candidate users',
  'Candidate Groups': 'Candidate group',
  'Due Date': 'Expiration date',
  'Follow Up Date': 'Tracking date',
  Priority: 'priority',
  'The follow up date as an EL expression (e.g. ${someDate} or an ISO date (e.g. 2015-06-26T09:54:00)':
    'The tracking date must conform to an EL expression, such as: ${someDate}, or be an ISO standard date, such as: 2015 - 06 - 26T09:54:00.',
  'The due date as an EL expression (e.g. ${someDate} or an ISO date (e.g. 2015-06-26T09:54:00)':
    'The tracking date must conform to an EL expression, such as: ${someDate}, or be an ISO standard date, such as: 2015 - 06 - 26T09:54:00.',
  Variables: 'variable',
  'Candidate Starter Configuration': 'Candidate starter configuration',
  'Candidate Starter Groups': 'Candidate starter group',
  'This maps to the process definition key.': 'This maps to the process definition key.',
  'Candidate Starter Users': 'Candidate starter users',
  'Specify more than one user as a comma separated list.': 'Specify multiple users as a comma separated list.',
  'Tasklist Configuration': 'Tasklist to configure',
  Startable: 'start-up',
  'Specify more than one group as a comma separated list.': 'Specify multiple groups as comma separated lists.'
}
